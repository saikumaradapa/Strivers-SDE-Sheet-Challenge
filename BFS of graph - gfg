    def bfsOfGraph(self, V: int, adj: List[List[int]]) -> List[int]:
        visited = [0] * V 
        res = []
        q = [0]
        while q :
            node = q.pop(0)
            if visited[node] == 0 :
                res.append(node)             
                visited[node] = 1
                for val in adj[node] :
                    q.append(val)
        
        return res
        
''' time complexity : O(V+E) 
    space complexity : O(V)
'''
